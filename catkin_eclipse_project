#!/bin/bash
echo -e 'If you are using catkin, you do not have the possibility to use make eclipse-project. You need to execute:\n
[1] catkin_make --force-cmake -G\"Eclipse CDT4 - Unix Makefiles\"\n\n
to generate the .project file and then run:\n
[2] awk -f $(rospack find mk)/eclipse.awk build/.project > build/.project_with_env && mv build/.project_with_env build/.project\n\n
Maybe you will need to execute the following if you would like to debug your program. To execute this command cd to the build/ folder. You should do so if you e.g. get an error like "No source available for main()".\n
[3] cmake ../src -DCMAKE_BUILD_TYPE=Debug\n\n
For me, the above procedure didnt generate a .pydevproject file, like make eclipse-project ever did. Clicking Set as PyDev Project would create a config but without any Paths, so coding would be a hassle.
[4] python $(rospack find mk)/make_pydev_project.py
Now copy the created file .pydevproject (which has all dependency package paths included) to <catkin_ws>/build and import your catkin-project into eclipse or Set it as PyDev Project if already imported.\n\n'

echo -e '-----------------------------------------------------------------'
echo -e '\e[32mRunning [1]...\e[0m'
echo -e '-----------------------------------------------------------------\n\n'

catkin_make --force-cmake -G"Eclipse CDT4 - Unix Makefiles"

echo -e '-----------------------------------------------------------------'
echo -e '\e[32mRunning [2]...\e[0m'
echo -e '-----------------------------------------------------------------\n\n'

awk -f $(rospack find mk)/eclipse.awk build/.project > build/.project_with_env && mv build/.project_with_env build/.project

echo -e '-----------------------------------------------------------------'
echo -e '\e[32mRunning [3]...\e[0m'
echo -e '-----------------------------------------------------------------\n\n'

cmake src/ -DCMAKE_BUILD_TYPE=Debug

echo -e '-----------------------------------------------------------------'
echo -e '\e[32mRunning [4]...\e[0m'
echo -e '-----------------------------------------------------------------\n\n'

python $(rospack find mk)/make_pydev_project.py

echo -e '-----------------------------------------------------------------'
echo -e '\e[32mcopy the generated .pydevproject to <catkin_ws>/build...\e[0m'
echo -e '-----------------------------------------------------------------\n\n'

cp atf_nav_test/.pydevproject build/

echo -e '-----------------------------------------------------------------'
echo -e '-----------------------------\e[31mFinish\e[0m------------------------------'
echo -e '-----------------------------------------------------------------'


